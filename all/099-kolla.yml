---
##########################################################
# Enable services

enable_common: "yes"

# infrastructure

enable_central_logging: "yes"
enable_prometheus: "yes"
enable_redis: "yes"
enable_grafana: "yes"

# openstack

enable_cinder: "yes"
enable_designate: "yes"
enable_octavia: "yes"

##########################################################
# Disable services

# The OpenStack Exporter generates a high load on the APIs and often
# leads to high memory consumption. Therefore, it is not enabled by default.
enable_prometheus_openstack_exporter: "no"

##########################################################
# Set default configuartions

certificates_dir: /share/certificates

kolla_base_distro: ubuntu
kolla_install_type: source

config_strategy: COPY_ALWAYS
node_custom_config: "{{ node_config }}/files/overlays"

docker_namespace: osism
docker_registry_kolla: quay.io

openstack_logging_debug: "False"  # NOTE: This has to be "False", not "false"!

kolla_disable_python_deprecation_warnings: "yes"

# haproxy
kolla_enable_tls_external: "yes"

haproxy_client_timeout: 5m
haproxy_server_timeout: 5m

openstack_cacert: "/etc/ssl/certs/ca-certificates.crt"

haproxy_socket_level_admin: "yes"

# mariadb
enable_mariabackup: "yes"

# horizon
horizon_backend_database: "yes"

# ironic
ironic_agent_files_directory: /share/ironic
enable_ironic_prometheus_exporter: false

# keystone
keystone_token_provider: "fernet"
# NOTE: use authorization code in keystone instead of default upstream
keystone_federation_oidc_response_type: "code"
keystone_oidc_forward_header: "X-Forwarded-Proto"

enable_keystone_federation: false         # Must be a boolean
keystone_enable_federation_openid: false  # Must be a boolean

# neutron
enable_neutron_port_forwarding: "yes"
enable_neutron_qos: "yes"

neutron_plugin_agent: "ovn"

# nova
nova_console: novnc

# octavia
octavia_loadbalancer_topology: "ACTIVE_STANDBY"
octavia_amp_image_tag: amphora
octavia_certs_work_dir: /share

enable_octavia_jobboard: "no"

# ceph
ceph_nova_user: nova

# rabbitmq
rabbitmq_monitoring_user: monitoring

# gnocchi
enable_gnocchi_statsd: "no"

# fluentd

# NOTE: https://github.com/osism/issues/issues/3
fluentd_enable_watch_timer: "true"

# rolling upgrades
glance_enable_rolling_upgrade: "yes"

# prometheus node-exporter
# add /var/lib/kubelet/pods to the default for excluded mountpoints
# k8s volumes should be monitored inside the cluster and not by the node-exporter
prometheus_node_exporter_cmdline_extras: "--collector.filesystem.mount-points-exclude=^/(dev|proc|run/credentials/.+|sys|var/lib/docker/.+|var/lib/containers/storage/.+|var/lib/kubelet/pods/.+)($|/)"

##########################################################
# Custom features

rabbitmq_datadir_volume: "rabbitmq"

enable_kolla_operations: "yes"
prometheus_custom_alert_paths: "{{
  (['/operations/prometheus'] if enable_kolla_operations | bool else [])
  +
  [node_custom_config + '/prometheus']
}}"

prometheus_common_config_overrides_paths: "{{
  (['/operations/prometheus/prometheus.yml.d'] if enable_kolla_operations | bool else [])
  +
  [node_custom_config + '/prometheus/prometheus.yml.d']
}}"

grafana_custom_extra_config_paths: "{{
  (['/operations/prometheus/grafana'] if enable_kolla_operations | bool else [])
  +
  [node_custom_config + '/grafana']
}}"

grafana_prometheus_config_paths: "{{
  [
    node_custom_config + '/grafana/' + inventory_hostname + '/prometheus.yaml',
    node_custom_config + '/grafana/prometheus.yaml'
  ]
  +
  (['/operations/grafana/prometheus.yml'] if enable_kolla_operations | bool else [])
  +
  ['prometheus.yaml.j2']
}}"

grafana_provisioning_config_paths: "{{
  [
    node_custom_config + '/grafana/' + inventory_hostname + '/provisioning.yaml',
    node_custom_config + '/grafana/provisioning.yaml'
  ]
  +
  (['/operations/grafana/provisioning.yaml'] if enable_kolla_operations | bool else [])
  +
  ['provisioning.yaml.j2']
}}"

grafana_custom_dashboards_paths: "{{
  (['/operations/grafana/dashboards'] if enable_kolla_operations | bool else [])
  +
  [node_custom_config + '/grafana/dashboards']
}}"

##########################################################
# Bugfixes

# NOTE: https://github.com/osism/issues/issues/231
ceilometer_central_enable_healthchecks: "no"

# NOTE: https://github.com/osism/issues/issues/288
gnocchi_statsd_enable_healthchecks: "no"

# required to be backward compatible
enable_ironic_dnsmasq: "no"
enable_skydive: "no"

keystone_admin_port: "35357"
keystone_admin_listen_port: "{{ keystone_admin_port }}"

enable_freezer: "no"
enable_horizon_freezer: "no"
enable_horizon_murano: "no"
enable_horizon_sahara: "no"
enable_horizon_senlin: "{{ enable_senlin | bool }}"
enable_horizon_solum: "no"
enable_horizon_vitrage: "no"
enable_ironic_pxe_uefi: "no"
enable_murano: "no"
enable_sahara: "no"
enable_senlin: "no"
enable_solum: "no"
enable_vitrage: "no"

enable_outward_rabbitmq: "no"
outward_rabbitmq_external_fqdn: "{{ kolla_external_fqdn }}"
outward_rabbitmq_management_port: "15674"
outward_rabbitmq_port: "5674"

senlin_internal_fqdn: "{{ kolla_internal_fqdn }}"
senlin_external_fqdn: "{{ kolla_external_fqdn }}"
senlin_api_port: "8778"
senlin_api_listen_port: "{{ senlin_api_port }}"
senlin_api_public_port: "{{ haproxy_single_external_frontend_public_port if haproxy_single_external_frontend | bool else senlin_api_port }}"
